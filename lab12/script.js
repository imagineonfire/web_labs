//–°–∫—Ä–∏–ø—Ç —Ç—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏ –≤ –ø–ª–∞–Ω–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —ç–∫—Ä–∞–Ω —Ñ—É–Ω–∫—Ü–∏–π: sin, cos, tan, ctg. 
//–ü–æ–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–∞–∫: –ù–∞–∂–∏–º–∞–µ–º "sin", —ç–∫—Ä–∞–Ω —á–∏—Å—Ç–∏—Ç—Å—è, –≤–≤–æ–¥–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Å–∏–Ω—É—Å–∞, –Ω–∞–∂–∏–º–∞–µ–º "="

/*function addMultiplicationSign(expression) {
    return expression.replace(/(\d)(\()/g, '$1*(')  // –£–º–Ω–æ–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ —Å–∫–æ–±–∫–∞–º–∏
                     .replace(/(\))(\d)/g, ')*$2'); // –£–º–Ω–æ–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ —Å–∫–æ–±–æ–∫
}
*/
let display = document.getElementById("display");
let buttons = Array.from(document.getElementsByTagName("button"));
let functionPending = null; // –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–π —Ñ—É–Ω–∫—Ü–∏–∏

buttons.forEach(button => {
    button.addEventListener("click", () => {
        function ctg(x) { return Math.cos(x) / Math.sin(x); }

        if (button.innerText === "C") {
            display.value = ""; // –û—á–∏—Å—Ç–∫–∞ –¥–∏—Å–ø–ª–µ—è
            functionPending = null; // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏
        } else if (button.innerText === "=") {
            try {
                // –ï—Å–ª–∏ –µ—Å—Ç—å –æ–∂–∏–¥–∞—é—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –ø—Ä–∏–º–µ–Ω—è–µ–º –µ—ë –∫ –∑–Ω–∞—á–µ–Ω–∏—é –Ω–∞ –¥–∏—Å–ø–ª–µ–µ
                if (functionPending) {
                    let value = eval(display.value); // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                    switch (functionPending) {
                        case "sin":
                            display.value = Math.sin(value);
                            break;
                        case "cos":
                            display.value = Math.cos(value);
                            break;
                        case "tan":
                            display.value = Math.tan(value);
                            break;
                        case "ctg":
                            display.value = ctg(value);
                            break;
                        default:
                            display.value = eval(display.value); // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥—Ä—É–≥–∏—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π
                    }
                    functionPending = null; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ —Ñ—É–Ω–∫—Ü–∏–∏
                } else {
                    display.value = eval(display.value); // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è
                }
            } catch {
                display.value = "Error"; // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
            }
        } else if (button.innerText === "x¬≤") {
            display.value = Math.pow(eval(display.value), 2); // –í–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≤ –∫–≤–∞–¥—Ä–∞—Ç
        } else if (button.innerText === "‚àö") {
            display.value = Math.sqrt(eval(display.value)); // –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ –∫–æ—Ä–Ω—è
        } else if (button.innerText === "œÄ") {
            display.value += Math.PI; // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ œÄ
        } else if (button.innerText === "ùûé") {
            display.value += Math.E; // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ e
        } else if (["sin", "cos", "tan", "ctg"].includes(button.innerText)) {
            functionPending = button.innerText; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–∂–∏–¥–∞–µ–º—É—é —Ñ—É–Ω–∫—Ü–∏—é
            display.value = ""; // –û—á–∏—â–∞–µ–º –¥–∏—Å–ø–ª–µ–π –¥–ª—è –≤–≤–æ–¥–∞ –∑–Ω–∞—á–µ–Ω–∏—è
        } else if (button.innerText === "n‚àö") {
            const n = prompt("–í–≤–µ–¥–∏—Ç–µ —Å—Ç–µ–ø–µ–Ω—å –∫–æ—Ä–Ω—è (n):"); // –ó–∞–ø—Ä–æ—Å —Å—Ç–µ–ø–µ–Ω–∏ –∫–æ—Ä–Ω—è
            if (n && !isNaN(n)) {
                display.value = Math.pow(eval(display.value), 1 / n); // –ö–æ—Ä–µ–Ω—å n-–æ–π —Å—Ç–µ–ø–µ–Ω–∏
            } else {
                alert("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è n.");
            }
        } else if (button.innerText === "^") {
            const n = prompt("–í–≤–µ–¥–∏—Ç–µ —Å—Ç–µ–ø–µ–Ω—å (n):"); // –ó–∞–ø—Ä–æ—Å —Å—Ç–µ–ø–µ–Ω–∏
            if (n && !isNaN(n)) {
                display.value = Math.pow(eval(display.value), n); // –í–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–ø–µ–Ω—å n
            } else {
                alert("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è n.");
            }
        } else {
            display.value += button.innerText; // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–∏ –Ω–∞ –¥–∏—Å–ø–ª–µ–π
        }
    });
});